// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String  @unique
  password String
  role     Role
  token    String?
  Admin    Admin?  @relation(fields: [adminId], references: [id])
  adminId  String? @db.ObjectId
  Staff    Staff?  @relation(fields: [staffId], references: [id])
  staffId  String? @db.ObjectId

  Notification Notification[]
}

model Admin {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  avatar      String
  name        String
  gender      String
  code        String
  birthday    DateTime
  position    String
  department  String
  phoneNumber String
  address     String
  Account     Account[]
  Staff       Staff[]
}

model Staff {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  avatar       String
  name         String
  gender       String
  code         String
  birthday     DateTime
  position     String
  department   String
  phoneNumber  String
  address      String
  numLeaveDays Int
  leaveHistory TimeObject[]
  Account      Account[]
  Request      Request[]
  Notification Notification[]
  Admin        Admin?         @relation(fields: [adminId], references: [id])
  adminId      String?        @db.ObjectId
}

model TimeObject {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  startDate DateTime
  endDate   DateTime
  staff     Staff?   @relation(fields: [staffId], references: [id])
  staffId   String?  @db.ObjectId
}

model Request {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  reason    String
  startDate DateTime
  endDate   DateTime
  status    String
  Staff     Staff    @relation(fields: [staffId], references: [id])
  staffId   String   @db.ObjectId
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  status    String
  time      DateTime
  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?  @db.ObjectId
  Staff     Staff?   @relation(fields: [staffId], references: [id])
  staffId   String?  @db.ObjectId
}

enum Role {
  ADMIN @map("ADMIN")
  STAFF @map("STAFF")
}
